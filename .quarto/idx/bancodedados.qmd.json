{"title":"Construindo Banco de Dados Financeiros","markdown":{"yaml":{"title":"Construindo Banco de Dados Financeiros","description":"Como construir um banco de dados financeiros com um processo 100% automático\ndesenvolvido na linguagem R?\n"},"headingText":"Módulo 1: Processo de Downloads e Tratamento de Dados","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE)\n```\n\n<!-- coleta de dados -->\n\n<style>\n.fcc-btn {\n  background-color: #199319;\n  color: white;\n  padding: 25px;\n  font-weight: bold;\n  width: 100%;\n  font-size: 200%;\n}\n</style>\n\n<center>\n<br/>\n<a target=\"_blank\" class=\"fcc-btn\" href=\"https://p.eduzz.com/996977\">Link para o Curso</a>  \n<br/>\n<br/>\n</center>\n\nConstruir um banco de dados financeiros com um processo 100% automático desenvolvido na linguagem R.\n\nEsta é a proposta desse curso!\n\nQuem faz análises com dados financeiros sofre com informações espalhadas em diversos lugares, em\nformatos distintos e atualizadas em momentos diferentes.\n\nA construção de um repositório único, onde as informações são padronizadas e podem ser acessadas\nde maneira simples em um banco de dados único.\n\nO curso **Construindo Banco de Dados Financeiros** tem uma abordagem 100% mão na massa para a\nconstrução de um banco de dados a partir da coleta automatizada de diversos dados do mercado\nfinanceiro.\n\nOs dados são referentes a diversos contratos negociados no mercado e indicadores financeiros\nnecessários para tarefas apreçamento e cálculo de risco.\n\nTodo o conteúdo do curso é totalmente desenvolvido com a linguagem de programação e análise de dados\nR.\nPassa por diversos pacotes para processamento de dados, leitura de arquivos: texto, json, csv, xml,\noperações em banco de dados relacional e consumo de APIs on-line.\n\nO objetivo é construir um sistema *DO ZERO* para automatizar o processo de download de dados\nfinanceiros de diversas fontes do mercado financeiro (B3, ANBIMA, BACEN, TesouroDireto), criando\num repositório de dados para o processamento e o enriquecimento dos dados para que sejam usados\nem diversas análises.\n\nSerão desenvolvidos os processos de download e armazenamento dos dados brutos e, posteriormente,\no processo de enriquecimento que transforma os dados brutos em dados estruturados.\n\nNo fim, serão criadas funções no R para consumir os dados estruturados e utilizá-los nas mais\ndiversas análises.\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\nlibrary(tidyverse)\nlibrary(hms)\ndf <- readxl::read_excel(\"data/dldf.xlsx\")\n```\n\n```{r echo=FALSE}\ntotal_duration <- df |>\n  summarize(total_duration = hms(\n    seconds = as.integer(sum(duration) / 1000) %% 60,\n    minutes = as.integer(sum(duration) / (1000 * 60)) %% 60,\n    hours = as.integer(sum(duration) / (60 * 60 * 1000))\n  )) |>\n  pull(total_duration)\n```\n\n**Duração**: `r total_duration`\n\n\n\n![](images/BDF Semana 1.png)\n\nDesenvolvemos um processo totalmente em R onde o usuário pode, através de\narquivos de configuração YAML, definir os dados que serão baixados e incluídos\nno banco de dados.\n\nO fato do código ser 100% R permite que, com o passar das aulas, o aluno\ncompreenda cada passo do processo e seja capaz de realizar suas eventuais\nintervenções.\n\n```{r echo=FALSE}\ntotal_duration <- df |>\n  filter(section == 1) |>\n  summarize(total_duration = hms(\n    seconds = as.integer(sum(duration) / 1000) %% 60,\n    minutes = as.integer(sum(duration) / (1000 * 60)) %% 60,\n    hours = as.integer(sum(duration) / (60 * 60 * 1000))\n  )) |>\n  pull(total_duration)\n```\n\n**Duração**: `r total_duration`\n\n```{r}\ndf |>\n  filter(section == 1) |>\n  select(order, title, time) |>\n  mutate(time = format(time, \"%M:%S\")) |>\n  rename(`#` = order, Aula = title, `Duração` = time) |>\n  knitr::kable()\n```\n\n### Download e processamento da Taxa DI (CDI) e do Índice DI (IDI) da B3\n\nA Taxa DI é uma das taxa de juros mais importantes utilizadas no Brasil.\nÉ a taxa de juros utilizada em diversos contratos negociados no mercado\nfinanceiro, como CDBs, Debêntures, LCI, LCA e outros.\n\n## Módulo 2: Banco para Armazenamento dos Dados (Mini Tutorial de SQL)\n\nVamos criar um banco de dados SQLite do zero para o armazenamento dos dados baixados.\n\nMini tutorial de SQL e operações CRUD (Create Read Update Delete)\n\n```{r echo=FALSE}\ntotal_duration <- df |>\n  filter(section == 2) |>\n  summarize(total_duration = hms(\n    seconds = as.integer(sum(duration) / 1000) %% 60,\n    minutes = as.integer(sum(duration) / (1000 * 60)) %% 60,\n    hours = as.integer(sum(duration) / (60 * 60 * 1000))\n  )) |>\n  pull(total_duration)\n```\n\n**Duração**: `r total_duration`\n\n```{r}\ndf |>\n  filter(section == 2) |>\n  select(order, title, time) |>\n  mutate(time = format(time, \"%M:%S\")) |>\n  rename(`#` = order, Aula = title, `Duração` = time) |>\n  knitr::kable()\n```\n\n## Módulo 3: Indicadores Financeiros do Banco Central\n\nDownload e processamento de Indicadores Financeiros do Banco Central: IPCA, IGP-M, SELIC e Moedas\n\nProcessamento para geração do Número Índice dos indicadores financeiros: SELIC, IPCA, IGP-M\n\n```{r echo=FALSE}\ntotal_duration <- df |>\n  filter(section == 3) |>\n  summarize(total_duration = hms(\n    seconds = as.integer(sum(duration) / 1000) %% 60,\n    minutes = as.integer(sum(duration) / (1000 * 60)) %% 60,\n    hours = as.integer(sum(duration) / (60 * 60 * 1000))\n  )) |>\n  pull(total_duration)\n```\n\n**Duração**: `r total_duration`\n\n```{r}\ndf |>\n  filter(section == 3) |>\n  select(order, title, time) |>\n  mutate(time = format(time, \"%M:%S\")) |>\n  rename(`#` = order, Aula = title, `Duração` = time) |>\n  knitr::kable()\n```\n\n## Módulo 4: Indicadores Financeiros da ANBIMA\n\nProjeções de Inflação (IGP-M e IPCA) da ANBIMA VNA de Títulos Públicos da ANBIMA Preços e Taxas Títulos Públicos da ANBIMA\n\n```{r echo=FALSE}\ntotal_duration <- df |>\n  filter(section == 4) |>\n  summarize(total_duration = hms(\n    seconds = as.integer(sum(duration) / 1000) %% 60,\n    minutes = as.integer(sum(duration) / (1000 * 60)) %% 60,\n    hours = as.integer(sum(duration) / (60 * 60 * 1000))\n  )) |>\n  pull(total_duration)\n```\n\n**Duração**: `r total_duration`\n\n```{r}\ndf |>\n  filter(section == 4) |>\n  select(order, title, time) |>\n  mutate(time = format(time, \"%M:%S\")) |>\n  rename(`#` = order, Aula = title, `Duração` = time) |>\n  knitr::kable()\n```\n\n## Módulo 5: Cadastro de Instrumentos da B3\n\nDownload e processamento do arquivo de Cadastro de Instrumentos (dados cadastrais de instrumentos) da B3 para Ações e Futuros\n\n```{r echo=FALSE}\ntotal_duration <- df |>\n  filter(section == 5) |>\n  summarize(total_duration = hms(\n    seconds = as.integer(sum(duration) / 1000) %% 60,\n    minutes = as.integer(sum(duration) / (1000 * 60)) %% 60,\n    hours = as.integer(sum(duration) / (60 * 60 * 1000))\n  )) |>\n  pull(total_duration)\n```\n\n**Duração**: `r total_duration`\n\n```{r}\ndf |>\n  filter(section == 5) |>\n  select(order, title, time) |>\n  mutate(time = format(time, \"%M:%S\")) |>\n  rename(`#` = order, Aula = title, `Duração` = time) |>\n  knitr::kable()\n```\n\n## Módulo 6: Boletim de Negociação da B3\n\nDownload e processamento do arquivo Boletim de Negociação da B3 (Dados diários) para Ações e Futuros\n\n```{r echo=FALSE}\ntotal_duration <- df |>\n  filter(section == 6) |>\n  summarize(total_duration = hms(\n    seconds = as.integer(sum(duration) / 1000) %% 60,\n    minutes = as.integer(sum(duration) / (1000 * 60)) %% 60,\n    hours = as.integer(sum(duration) / (60 * 60 * 1000))\n  )) |>\n  pull(total_duration)\n```\n\n**Duração**: `r total_duration`\n\n```{r}\ndf |>\n  filter(section == 6) |>\n  select(order, title, time) |>\n  mutate(time = format(time, \"%M:%S\")) |>\n  rename(`#` = order, Aula = title, `Duração` = time) |>\n  knitr::kable()\n```\n\n## Módulo 7: Cálculo do Preço Ajustado de Ações\n\nAjuste de retornos de Ações devido aos eventos corporativos (desdobramento, grupamento, etc)\n\n```{r echo=FALSE}\ntotal_duration <- df |>\n  filter(section == 7) |>\n  summarize(total_duration = hms(\n    seconds = as.integer(sum(duration) / 1000) %% 60,\n    minutes = as.integer(sum(duration) / (1000 * 60)) %% 60,\n    hours = as.integer(sum(duration) / (60 * 60 * 1000))\n  )) |>\n  pull(total_duration)\n```\n\n**Duração**: `r total_duration`\n\n```{r}\ndf |>\n  filter(section == 7) |>\n  select(order, title, time) |>\n  mutate(time = format(time, \"%M:%S\")) |>\n  rename(`#` = order, Aula = title, `Duração` = time) |>\n  knitr::kable()\n```\n\n## Módulo 8: Curvas de Juros\n\nProcessamento para geração da Curva de Juros PrefixadaDownload e processamento das Curvas da ANBIMA\n\n```{r echo=FALSE}\ntotal_duration <- df |>\n  filter(section == 8) |>\n  summarize(total_duration = hms(\n    seconds = as.integer(sum(duration) / 1000) %% 60,\n    minutes = as.integer(sum(duration) / (1000 * 60)) %% 60,\n    hours = as.integer(sum(duration) / (60 * 60 * 1000))\n  )) |>\n  pull(total_duration)\n```\n\n**Duração**: `r total_duration`\n\n```{r}\ndf |>\n  filter(section == 8) |>\n  select(order, title, time) |>\n  mutate(time = format(time, \"%M:%S\")) |>\n  rename(`#` = order, Aula = title, `Duração` = time) |>\n  knitr::kable()\n```\n\n<center>\n<br/>\n<a target=\"_blank\" class=\"fcc-btn\" href=\"https://p.eduzz.com/996977\">Link para o Curso</a>  \n<br/>\n<br/>\n</center>\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"bancodedados.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.335","theme":"litera","title":"Construindo Banco de Dados Financeiros","description":"Como construir um banco de dados financeiros com um processo 100% automático\ndesenvolvido na linguagem R?\n"},"extensions":{"book":{"multiFile":true}}}}}