{"title":"Indicadores da Pesquisa Focus","markdown":{"yaml":{"title":"Indicadores da Pesquisa Focus","description":"As APIs de Expectativas de Mercado da Pesquisa Focus não informam\ndireito quais indicadores estão disponíveis. A documentação é meio falha e\npouco confiável. Dessa maneira, a única maneira de descobrir o que está\ndisponível é investigando a API. É isso que vou mostrar como fazer neste post.\n","author":[{"name":"Wilson Freitas"}],"date":"2022-06-05","categories":["R","bcb","opendata"]},"headingText":"Função `get_market_expectations`","containsRefs":false,"markdown":"\n\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\nÉ possível obter as expectativas de mercado para diversos indicadores\nmacroeconômicos da pesquisa Focus de forma totalmente automática utilizando\no R.\n\nVamos utilizar o pacote {rbcb} para obter estes dados.\nO pacote {rbcb} é uma interface para algumas das diversas APIs do portal de dados\nabertos do Banco Central ([link](https://dadosabertos.bcb.gov.br)).\n\n[expectativas-mercado]: https://dadosabertos.bcb.gov.br/dataset/expectativas-mercado\n\nAs expectativas de mercado para os indicadores macroeconômicos da pesquisa\nFocus são consolidadas em estatísticas diárias e divulgadas na\n[API][expectativas-mercado].\nEstas estatísticas são calculadas com base nas expectativas de mercado\nde diversos bancos, gestores de recursos e demais instituições do mercado\nfinanceiro.\nOs indicadores macroeconômicos são referentes a índices de preços, crescimento\ndo PIB e da produção industrial, taxa de câmbio, taxa Selic, variáveis fiscais\ne indicadores do setor externo e são publicadas todo primeiro dia útil da\nsemana.\n\nCarregando os pacotes utilizados.\n\n```{r, message=FALSE, warning=FALSE}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(rbcb)\n```\n\n\nA função `get_market_expectations` implementa a interface para a API de\nexpectativas de mercado da pesquisa Focus.\nVejamos os seus argumentos e o que podemos fazer com eles:\n\n```{r}\nget_market_expectations |> args()\n```\n\n* `type`: A API de expectativas possui diversos *endpoints* e o argumento `type`\ndefine qual deve ser utilizado. Se não for informado o valor `annual` será utilizado.\n    * `annual`, `quarterly` e `monthly` retorna, respectivamente, as expectativas anuais, trimestrais e mensais dos indicadores macroeconômicos\n    * `inflation-12-months` para expectativas de inflação nos próximos 12 meses\n    * `top5s-monthly` e `top5s-annual` retorna as expectativas mensais e anuais para os indicadores do Top 5\n    * `institutions` expectativas informadas pelas instituições credenciadas\n    * `selic` expectativas de mercado SELIC\n    * `top5s-selic` expectativas Top 5 para SELIC\n* `indic` nome do indicador macroeconômico, é opcional, de forma, quando não\nfor definido, todos os indicadores disponíveis para o *endpoint* serão\nretornados. Esse ponto é curioso, pois a documentação não é boa e informa\nindicadores que não são mais disponibilizados.\n* `start_date` e `end_date` definem as datas de início e fim para a consulta,\nsão opcionais e caso não sejam informados, todo o período será retornado, o\nque não é recomendado pois onera os serviços de dados do BCB que já não são\nlá os melhores.\n* `keep_names` é um argumento utilizado internamente que não faz diferença para\no usuário final.\n* `...` aqui são passados argumentos adicionais para a API\n    * `$select` define as colunas retornadas na consulta: `Nome, Idade`\n    * `$filter` define filtros mais elaborados baseado nos valores das colunas: `Nome eq 'João'`\n    * `$orderby` define como as colunas devem ser ordenadas: `Nome asc, Idade desc`\n    * `$skip` define quantidade de linhas no começo que não devem ser retornadas\n    * `$top` define a quantidade de linhas que serão retornadas\n\n# Descobrindo indicadores disponíveis\n\nPara descobrir os indicadores macroeconômicos disponíveis para um determinado\n*endpoint* é necessário realizar duas consultas.\nA primeira para descobrir a data mais recente com dados, pois a disponibilidade\ndos indicadores varia com o tempo, de maneira que temos indicadores mais\nrecentes que não estão no histórico antigo.\nTendo esta data, realizamos a segunda consulta filtrando por esta data.\n\nVamos fazer isso para cada um dos *endpoints*.\n\n## `annual`\n\n**Consulta 1**\n\n```{r get_market_expectations-annual-data, cache=TRUE}\nget_market_expectations(\"annual\",\n  `$top` = 1,\n  `$select` = \"Data\",\n  `$orderby` = \"Data desc\"\n) |>\n  rmarkdown::paged_table()\n```\n\n**Consulta 2**\n\n```{r get_market_expectations-annual-indicadores, cache=TRUE}\nget_market_expectations(\"annual\",\n  `$select` = \"Data,Indicador,IndicadorDetalhe\",\n  `$filter` = \"Data eq '2022-04-29'\"\n) |>\n  distinct(Indicador, IndicadorDetalhe) |>\n  arrange(Indicador, IndicadorDetalhe) |>\n  rmarkdown::paged_table()\n```\n\nEste endpoint tem uma coluna IndicadorDetalhe, que é como uma especificação do\nindicador.\nNo caso, Balança Comercial-Saldo ou Balança Comercial-Exportações, por exemplo.\n\n## `monthly`\n\n**Consulta 1**\n\n```{r get_market_expectations-monthly-data, cache=TRUE}\nget_market_expectations(\"monthly\",\n  `$top` = 1,\n  `$select` = \"Data\",\n  `$orderby` = \"Data desc\"\n) |>\n  rmarkdown::paged_table()\n```\n\n**Consulta 2**\n\n```{r get_market_expectations-monthly-indicadores, cache=TRUE}\nget_market_expectations(\"monthly\",\n  `$select` = \"Data,Indicador\",\n  `$filter` = \"Data eq '2022-04-29'\"\n) |>\n  distinct(Indicador) |>\n  arrange(Indicador) |>\n  rmarkdown::paged_table()\n```\n\n\n## `quarterly`\n\n**Consulta 1**\n\n```{r get_market_expectations-quarterly-data, cache=TRUE}\nget_market_expectations(\"quarterly\",\n  `$top` = 1,\n  `$select` = \"Data\",\n  `$orderby` = \"Data desc\"\n) |>\n  rmarkdown::paged_table()\n```\n\n**Consulta 2**\n\n```{r get_market_expectations-quarterly-indicadores, cache=TRUE}\nget_market_expectations(\"quarterly\",\n  `$select` = \"Data,Indicador\",\n  `$filter` = \"Data eq '2022-04-29'\"\n) |>\n  distinct(Indicador) |>\n  arrange(Indicador) |>\n  rmarkdown::paged_table()\n```\n\n## `inflation-12-months`\n\n**Consulta 1**\n\n```{r get_market_expectations-inflation-12-months-data, cache=TRUE}\nget_market_expectations(\"inflation-12-months\",\n  `$top` = 1,\n  `$select` = \"Data\",\n  `$orderby` = \"Data desc\"\n) |>\n  rmarkdown::paged_table()\n```\n\n**Consulta 2**\n\n```{r get_market_expectations-inflation-12-months-indicadores, cache=TRUE}\nget_market_expectations(\"inflation-12-months\",\n  `$select` = \"Data,Indicador\",\n  `$filter` = \"Data eq '2022-04-29'\"\n) |>\n  distinct(Indicador) |>\n  arrange(Indicador) |>\n  rmarkdown::paged_table()\n```\n\n## `top5s-annual`\n\n**Consulta 1**\n\n```{r get_market_expectations-top5s-annual-data, cache=TRUE}\nget_market_expectations(\"top5s-annual\",\n  `$top` = 1,\n  `$select` = \"Data\",\n  `$orderby` = \"Data desc\"\n) |>\n  rmarkdown::paged_table()\n```\n\n**Consulta 2**\n\n```{r get_market_expectations-top5s-annual-indicadores, cache=TRUE}\nget_market_expectations(\"top5s-annual\",\n  `$select` = \"Data,Indicador\",\n  `$filter` = \"Data eq '2022-04-29'\"\n) |>\n  distinct(Indicador) |>\n  arrange(Indicador) |>\n  rmarkdown::paged_table()\n```\n\n\n## `top5s-monthly`\n\n**Consulta 1**\n\n```{r get_market_expectations-top5s-monthly-data, cache=TRUE}\nget_market_expectations(\"top5s-monthly\",\n  `$top` = 1,\n  `$select` = \"Data\",\n  `$orderby` = \"Data desc\"\n) |>\n  rmarkdown::paged_table()\n```\n\n**Consulta 2**\n\n```{r get_market_expectations-top5s-monthly-indicadores, cache=TRUE}\nget_market_expectations(\"top5s-monthly\",\n  `$select` = \"Data,Indicador\",\n  `$filter` = \"Data eq '2022-04-29'\"\n) |>\n  distinct(Indicador) |>\n  arrange(Indicador) |>\n  rmarkdown::paged_table()\n```\n\n## `top5s-selic`\n\n**Consulta 1**\n\n```{r get_market_expectations-top5s-selic-data, cache=TRUE}\nget_market_expectations(\"top5s-selic\",\n  `$top` = 1,\n  `$select` = \"Data\",\n  `$orderby` = \"Data desc\"\n) |>\n  rmarkdown::paged_table()\n```\n\n**Consulta 2**\n\n```{r get_market_expectations-top5s-selic-indicadores, cache=TRUE}\nget_market_expectations(\"top5s-selic\",\n  `$select` = \"Data,indicador\",\n  `$filter` = \"Data eq '2022-04-29'\"\n) |>\n  distinct(indicador) |>\n  arrange(indicador) |>\n  rmarkdown::paged_table()\n```\n\nAqui temos uma pegadinha, a coluna indicador vem com sua inicial minúscula,\ndiferente dos demais *endpoints*.\n\n## `selic`\n\n**Consulta 1**\n\n```{r get_market_expectations-selic-data, cache=TRUE}\nget_market_expectations(\"selic\",\n  `$top` = 1,\n  `$select` = \"Data\",\n  `$orderby` = \"Data desc\"\n) |>\n  rmarkdown::paged_table()\n```\n\n**Consulta 2**\n\n```{r get_market_expectations-selic-indicadores, cache=TRUE}\nget_market_expectations(\"selic\",\n  `$select` = \"Data,Indicador\",\n  `$filter` = \"Data eq '2022-04-29'\"\n) |>\n  distinct(Indicador) |>\n  arrange(Indicador) |>\n  rmarkdown::paged_table()\n```\n\n\n# Conclusão\n\nObservamos que para a maior parte dos *endpoints*,\na última data disponível é a mesma, indicando que as estatísticas são atualizadas\nconjuntamente.\n\nUma vez que conhecemos os indicadores disponíveis podemos utilizar o argumento\n`indic` para selecionar o indicador desejado na consulta.\n\n```{r exemplo, cache=TRUE}\nget_market_expectations(\"monthly\",\n  indic = c(\"IPCA\", \"IGP-M\"),\n  start_date = \"2022-04-29\",\n  `$select` = \"Data,Indicador,DataReferencia,Media,baseCalculo\"\n) |>\n  rmarkdown::paged_table()\n```\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"indicadores-da-pesquisa-focus.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.335","theme":"litera","title-block-banner":true,"title":"Indicadores da Pesquisa Focus","description":"As APIs de Expectativas de Mercado da Pesquisa Focus não informam\ndireito quais indicadores estão disponíveis. A documentação é meio falha e\npouco confiável. Dessa maneira, a única maneira de descobrir o que está\ndisponível é investigando a API. É isso que vou mostrar como fazer neste post.\n","author":[{"name":"Wilson Freitas"}],"date":"2022-06-05","categories":["R","bcb","opendata"]},"extensions":{"book":{"multiFile":true}}}}}