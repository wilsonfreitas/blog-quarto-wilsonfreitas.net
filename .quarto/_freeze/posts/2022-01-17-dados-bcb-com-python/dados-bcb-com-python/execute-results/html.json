{
  "hash": "2aea665d1fefeeef0105709204cb9863",
  "result": {
    "markdown": "---\ntitle: \"Obtendo Dados do BCB com Python\"\ndescription: |\n  Obter os dados para an√°lise de forma simples √© fundamental e necess√°rio.\npreview: expectativas.png\nauthor:\n  - name: Wilson Freitas\n    url: {}\ndate: 2022-01-17\ncategories:\n  - Python\n  - bcb\n  - opendata\nexecute: \n  freeze: auto\n---\n\nObter os dados para an√°lise de forma simples √© fundamental e necess√°rio.\n\nDepois de passar alguns anos mantendo o pacote {rbcb} que faz a integra√ß√£o do R com as APIs de dados abertos do Banco Central, decidi fazer o port para Python.\n\nEm parte porque o PyPI (Python Package Index - reposit√≥rio de pacotes do Python) √© bem menos burocr√°tico que o CRAN (reposit√≥rio de pacote do R), mas nos √∫ltimos anos tenho mexido mais com Python e fazia sentido portar algumas ferramentas.\n\nO pacote {python-bcb} √© a contraparte em Python do pacote {rbcb} do R.\n\nS√≥ que acabou ficando maior, n√£o por causa do Python, mas por que eu estava com tempo e paci√™ncia e acabei implementando parte da especifica√ß√£o OData. Isso permite de forma bem simples integrar diversas APIs do Banco Central que implementam essa especifica√ß√£o. Na minha √∫ltima contagem tinha 39 APIs nessa estrutura.\n\nO pacote {python-bcb} traz as seguintes APIs:\n\n- SGS\n- S√©ries de Moedas do Conversor de Moedas do Banco Central\n- Expectativas do FOCUS\n- Boletins da PTAX (abertura, 3 intradi√°rios, fechamento)\n- Dados selecionados de institui√ß√µes financeiras (IFDATA)\n\nAgora o que d√° mais trabalho ao fazer a integra√ß√£o de uma API √© escrever a documenta√ß√£oüòâ dado que as APIs n√£o s√£o padronizadas.\n\nVou comunicando aqui na medida que novas APIs forem sendo integradas.\n\nObviamente espero todo o tipo de coment√°rios e sugest√µes.\n\nDocumenta√ß√£o do projeto: <https://wilsonfreitas.github.io/python-bcb/index.html>\n\nLink do projeto: <https://github.com/wilsonfreitas/python-bcb>\n\nNo c√≥digo abaixo trago um exemplo que como utilizar a API de Expectativas do FOCUS para obter um DataFrame das expectativas de IPCA de 2021 ao longo de 2021.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nfrom bcb import Expectativas\n\nem = Expectativas()\nep = em.get_endpoint(\"ExpectativasMercadoAnuais\")\n\ndf_ipca_2021 = (\n    ep.query()\n      .filter(ep.Indicador == \"IPCA\")\n      .filter(ep.Data >= \"2021-01-01\", ep.Data <= \"2021-12-31\")\n      .filter(ep.DataReferencia == \"2021\", ep.baseCalculo == 1)\n      .orderby(ep.Data.asc())\n      .select(ep.Data, ep.Media, ep.Mediana)\n      .limit(10)\n      .collect()\n)\n\ndf_ipca_2021\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Data</th>\n      <th>Media</th>\n      <th>Mediana</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2021-01-04</td>\n      <td>3.31</td>\n      <td>3.32</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2021-01-05</td>\n      <td>3.29</td>\n      <td>3.30</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2021-01-06</td>\n      <td>3.29</td>\n      <td>3.29</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2021-01-07</td>\n      <td>3.27</td>\n      <td>3.28</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2021-01-08</td>\n      <td>3.35</td>\n      <td>3.35</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2021-01-11</td>\n      <td>3.40</td>\n      <td>3.40</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2021-01-12</td>\n      <td>3.43</td>\n      <td>3.40</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2021-01-13</td>\n      <td>3.48</td>\n      <td>3.44</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2021-01-14</td>\n      <td>3.50</td>\n      <td>3.49</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2021-01-15</td>\n      <td>3.52</td>\n      <td>3.47</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "dados-bcb-com-python_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}