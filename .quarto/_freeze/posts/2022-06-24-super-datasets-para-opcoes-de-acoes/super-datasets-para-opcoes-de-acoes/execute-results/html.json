{
  "hash": "ce4b9621c9ac4c4152833b55f8e5533c",
  "result": {
    "markdown": "---\ntitle: \"Super Datasets para Opções de Ações\"\ndescription: |\n  Um dos super datasets do pacote {rb3} é o de opções de ações.\n  Com este dataset é possível realizar diversos cálculos com dados de opções de ações, como\n  calcular a volatilidade implícita das opções, as gregas e até mesmo fazer o ajuste de\n  modelos teóricos.\nauthor:\n  - name: Wilson Freitas\n    url: {}\ndate: 2022-06-24\n---\n\n\n\n\nDados de opções de ações finalmente disponíveis de forma simples e direta.\nDurante muito tempo busquei isso, os dados de opções são mais chatos pois precisam de outros dados\npara a realização dos cálculos.\nTer apenas os dados de prêmio das opções (preços das opções) não permite que diversas das medidas\nde interesse associadas a opções, como as gregas e a volatilidade implícita, sejam calculadas.\nUtilizando Black & Scholes é necessário ainda ter o preço do ativo objeto (preço da ação) e as\ntaxas de juros.\nCom estas informações é possível calcular a volatilidade e a partir daí todas as demais medidas\nde interesse podem ser calculadas.\n\nVou mostrar aqui como calcular a volatilidade e as gregas para opções a partir de dados obtidos \ncom o pacote {rb3}.\nPara realizar os cálculos com as opções eu utilizo o pacote {oplib} que desenvolvi com diversos\nmodelos implementados:\n\n- Black, Scholes & Merto para apreçamento das opções\n- Black para apreçamento de opções sobre futuros, utilizado em opções sobre índices de taxas de juros, como IDI\n- Corrado-Su para o apreçamento de opções considerando assimetria e curtose\n- entre outros\n\nEste pacote ainda é experimental, não está publicado no CRAN e a documentação ainda está em desenvolvimento.\n\nVamos começar carregando os pacotes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rb3)\nlibrary(bizdays)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'bizdays'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:stats':\n\n    offset\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2\n──\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ ggplot2 3.4.1     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.4     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(oplib)\n```\n:::\n\n\nVamos selecionar o último dia útil para obter os dados diários do arquivo COTAHIST disponibilizado pela B3.\nO arquivo COTAHIST traz diversas informações do mercado de ações e inclui as opções.\nAdicionalmente, precisamos das taxas de juros e utilizo a função `rb3::yc_get` para obter a curva de juros\npara a data de referência.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrefdate <- preceding(\"2022-06-24\", \"Brazil/ANBIMA\")\nch <- cotahist_get(refdate, \"daily\")\nyc <- yc_get(refdate)\n```\n:::\n\n\nCom os dados de ações e opções, pelo arquivo COTAHIST, e com as taxas de juros, utilizo a função\n`rb3::cotahist_options_by_symbol_superset` para obter os dados de opções para um símbolo específico.\nAqui vou utilizar `PETR4` que é uma das ações com maior volume de negociação na bolsa.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsymbol_ <- \"PETR4\"\nop1 <- cotahist_options_by_symbol_superset(symbol_, ch, yc)\n```\n:::\n\n\nNo data.frame `op1` temos informações de preço da ação na data de referência, preços das opções,\ntaxas de juros, vencimento das opções, volumes de negociação e diversas outras informações.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nop1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 437 × 28\n   refdate    symbol   type  strike maturity_d…¹  open  high   low close average\n   <date>     <chr>    <fct>  <dbl> <date>       <dbl> <dbl> <dbl> <dbl>   <dbl>\n 1 2022-06-24 PETRA140 Call    1.94 2023-01-20   24.8  24.8  24.8  24.8    24.8 \n 2 2022-06-24 PETRA239 Call   50.4  2023-01-20    0.09  0.24  0.09  0.23    0.15\n 3 2022-06-24 PETRA281 Call   18.4  2023-01-20    9.6   9.6   9.6   9.6     9.6 \n 4 2022-06-24 PETRA297 Call   30.2  2023-01-20    2.7   2.7   2.7   2.7     2.7 \n 5 2022-06-24 PETRA359 Call   29.4  2023-01-20    2.87  2.87  2.87  2.87    2.87\n 6 2022-06-24 PETRA361 Call   26.4  2023-01-20    4.3   4.3   4.23  4.23    4.24\n 7 2022-06-24 PETRD450 Call   38.4  2023-04-20    1.42  1.42  1.42  1.42    1.42\n 8 2022-06-24 PETRG1   Call   13.4  2022-07-15   13.7  13.7  12.6  12.6    13.6 \n 9 2022-06-24 PETRG121 Call   19.2  2022-07-15    7.87  7.87  7.36  7.37    7.79\n10 2022-06-24 PETRG178 Call   20.2  2022-07-15    6.7   6.7   6.45  6.45    6.45\n# … with 427 more rows, 18 more variables: volume <dbl>,\n#   traded_contracts <dbl>, transactions_quantity <int>, distribution_id <int>,\n#   symbol.underlying <chr>, open.underlying <dbl>, high.underlying <dbl>,\n#   low.underlying <dbl>, close.underlying <dbl>, average.underlying <dbl>,\n#   best_bid <dbl>, best_ask <dbl>, volume.underlying <dbl>,\n#   traded_contracts.underlying <dbl>, transactions_quantity.underlying <int>,\n#   distribution_id.underlying <int>, fixing_maturity_date <date>, …\n```\n:::\n:::\n\n\npara simplificar os cálculos vou separar duas informações úteis, os vencimentos das opções e o\npreço de fechamento da ação, que é único para a data de referência.\nOs vencimentos das opções são ordenados para que eu possa facilmente selecionar um vencimento\ndesejado.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmaturities <- unique(op1$maturity_date) |> sort()\nclose_underlying <- op1$close.underlying[1]\n```\n:::\n\n\nAs opções de ações, tipicamente, possuem maior liquidez no primeiro vencimento disponível.\nPor isso, vou selecionar todas as opções com `maturity_date == maturities[1]`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nop_vol <- op1 |>\n  filter(maturity_date == maturities[1]) |>\n  mutate(\n    biz_days = bizdays(\n      refdate, following(maturity_date, \"Brazil/ANBIMA\"), \"Brazil/ANBIMA\"\n    ),\n    time_to_maturity = biz_days / 252,\n    rate = log(1 + r_252),\n    impvol = bsmimpvol(\n      close, type, close.underlying, strike, time_to_maturity, rate, 0\n    ),\n    delta = bsmdelta(\n      type, close.underlying, strike, time_to_maturity, rate, 0, impvol\n    )\n  ) |>\n  select(\n    symbol, volume,\n    type, close.underlying, strike, time_to_maturity, rate, impvol,\n    delta, biz_days, volume\n  )\n```\n:::\n\n\nApós a seleção das opções, uma série de cálculos são realizados para obter:\n\n- dias úteis até o vencimento `biz_days`\n- prazo em anos até o vencimento `time_to_maturity`\n- taxas de juros em capitalização contínua `rate`\n- volatilidade implícita `impvol` com o modelo Black & Scholes\n- a grega `delta` para o modelo Black & Scholes\n\nEm seguida algumas variáveis são selecionadas para a visualizção dos dados.\n\nVamos visualizar o *smile* de volatilidade para com os preços de exercício das opções no eixo X\nColoco uma linha vertical marcando o nível do preço do ativo objeto, facilitando a interpretação do\nque está dentro/fora do dinheiro para as opções de compra e venda (Calls e Puts).\nO tamanho de cada ponto é definido pelo volumen de negociação de cada opção.\nInteressante notar que os maiores volumes ficam nos strikes próximos do preço atual do ativo objeto.\nEstas são as opções ATM, no dinheiro.\n\n\n::: {.cell preview='true'}\n\n```{.r .cell-code}\nop_vol |>\n  filter(!is.na(impvol)) |>\n  ggplot(aes(x = strike, y = impvol, colour = type, size = volume)) +\n  geom_point() +\n  geom_vline(xintercept = close_underlying, alpha = 0.5, size = 1) +\n  facet_wrap(type ~ biz_days) +\n  theme(legend.position = \"bottom\") +\n  labs(\n    x = \"Strike\", y = \"Implied Volatility\",\n    title = str_glue(\"Equity Options Volatility - {symbol_} {format(refdate)}\")\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](super-datasets-para-opcoes-de-acoes_files/figure-html/strike-vol-1.png){width=672}\n:::\n:::\n\n\nAbaixo temos o *smile* de volatilidade com o delta das opções no eixo X.\nAqui fica mais fácil visualizar as opções ATM, pois estas tem delta de 0.5 (ou -0.5 no caso das Puts).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nop_vol |>\n  filter(!is.na(impvol)) |>\n  ggplot(aes(x = delta, y = impvol, colour = type, size = volume)) +\n  geom_point() +\n  geom_vline(xintercept = c(-0.5, 0.5), alpha = 0.5, size = 1) +\n  facet_wrap(~ biz_days, scales = \"free\") +\n  theme(legend.position = \"bottom\") +\n  labs(\n    x = \"Delta\", y = \"Implied Volatility\",\n    title = str_glue(\"Equity Options Volatility - {symbol_} {format(refdate)}\")\n  )\n```\n\n::: {.cell-output-display}\n![](super-datasets-para-opcoes-de-acoes_files/figure-html/delta-vol-1.png){width=672}\n:::\n:::\n\n\nO objetivo deste post é mostrar como é fácil obter dados de opções com o pacote {rb3} e com o pacote\n{oplib} realizar os cálculos com estes dados.\n",
    "supporting": [
      "super-datasets-para-opcoes-de-acoes_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}