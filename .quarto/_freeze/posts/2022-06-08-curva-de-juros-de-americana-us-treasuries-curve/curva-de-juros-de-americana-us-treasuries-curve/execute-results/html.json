{
  "hash": "7243b0f0982653304c4636802bb44904",
  "result": {
    "markdown": "---\ntitle: \"Curva de Juros de Americana - US Treasuries Curve\"\ndescription: |\n  Como construir a curva de juros americana utilizando dados do Tesouro\n  Americano (US Treasury) e o pacote {fixedincome}.\nauthor:\n  - name: Wilson Freitas\n    url: {}\ndate: 2022-06-06\ncategories:\n  - R\n  - fixedincome\n  - opendata\n---\n\n\n\n\nA curva de juros americana é uma peça fundamental do quebra-cabeças\neconômico/financeiro.\nNeste post vamos ver como obter os dados do histórico da estrutura a termo\nde juros dos Estados Unidos e como construir uma curva de juros utilizando\no pacote {fixedincome}.\n\nVamos utilizar o Quandl, que hoje é o\n[Nasdaq Data Link](https://data.nasdaq.com/), para obter o histórico de\njuros americanos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(Quandl)\n\nyc_all <- Quandl(\"USTREASURY/YIELD\")\n```\n:::\n\n::: {.cell hash='curva-de-juros-de-americana-us-treasuries-curve_cache/html/get-data_00ab22e5ae1fe33772156a971dcfb975'}\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: xts\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: zoo\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'zoo'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n```\n:::\n:::\n\n\n`yc_all` traz todo o histórico de juros, as *Constant Maturity Treasury rates*,\nque relacionam as taxas de juros ao um conjuto de prazos padronizados: 1, 3, e 6\nmeses, e 1, 2, 3, 5, 7, 10, 20, e 30 anos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(yc_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        Date 1 MO 2 MO 3 MO 6 MO 1 YR 2 YR 3 YR 5 YR 7 YR 10 YR 20 YR 30 YR\n1 2023-02-17 4.64 4.81 4.84 4.99 5.00 4.60 4.33 4.03 3.95  3.82  4.01  3.88\n2 2023-02-16 4.66 4.80 4.84 4.98 4.99 4.62 4.35 4.06 3.98  3.86  4.05  3.92\n3 2023-02-15 4.64 4.79 4.79 4.97 4.96 4.62 4.35 4.04 3.94  3.81  3.97  3.85\n4 2023-02-14 4.63 4.78 4.80 4.98 4.99 4.60 4.32 4.00 3.90  3.77  3.94  3.81\n5 2023-02-13 4.66 4.78 4.81 4.99 4.91 4.52 4.22 3.93 3.84  3.72  3.92  3.79\n6 2023-02-10 4.66 4.77 4.79 4.89 4.89 4.50 4.19 3.93 3.86  3.74  3.96  3.83\n```\n:::\n:::\n\n\nVamos montar a curva de juros para uma data específica utilizando os prazos\ndefinidos no histórico.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.1     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.4     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nrefdate <- as.Date(\"2022-02-04\")\nyc <- yc_all |> filter(Date == refdate)\n\nyc\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        Date 1 MO 2 MO 3 MO 6 MO 1 YR 2 YR 3 YR 5 YR 7 YR 10 YR 20 YR 30 YR\n1 2022-02-04 0.05 0.12 0.23 0.56 0.89 1.31 1.55 1.78  1.9  1.93  2.29  2.23\n```\n:::\n:::\n\n\nComecemos construindo o vetor de prazos da curva.\nPara isso precisamos interpretar os nomes das colunas e convertê-los em prazos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnx <- names(yc)\nterms_names <- nx[-1]\nterms_names\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"1 MO\"  \"2 MO\"  \"3 MO\"  \"6 MO\"  \"1 YR\"  \"2 YR\"  \"3 YR\"  \"5 YR\"  \"7 YR\" \n[10] \"10 YR\" \"20 YR\" \"30 YR\"\n```\n:::\n:::\n\n\nTemos `MO` indicando prazos em meses e `YR` indicando os anos.\nVamos utilizar uma simples substituição de texto para converter `MO`\npara `months` e `YR` para `years`.\nDessa forma podemos utilizar a função `fixedincome::as.term` que\nconverte um string em um objeto `term` (prazo).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stringr)\n\nterms_names <- terms_names |>\n  str_replace(\"MO\", \"months\") |>\n  str_replace(\"YR\", \"years\")\n\nterms_names\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"1 months\" \"2 months\" \"3 months\" \"6 months\" \"1 years\"  \"2 years\" \n [7] \"3 years\"  \"5 years\"  \"7 years\"  \"10 years\" \"20 years\" \"30 years\"\n```\n:::\n:::\n\n\nApós a conversão usamos a função `purrr::map` com a função\n`fixedincome::as.term` e assim vamos obter uma lista com diversos objetos\n`term`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(purrr)\nlibrary(fixedincome)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'fixedincome'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:dplyr':\n\n    first, last\n```\n:::\n\n```{.r .cell-code}\ncurve_terms <- map(terms_names, as.term)\ncurve_terms\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] \"1 month\"\n\n[[2]]\n[1] \"2 months\"\n\n[[3]]\n[1] \"3 months\"\n\n[[4]]\n[1] \"6 months\"\n\n[[5]]\n[1] \"1 year\"\n\n[[6]]\n[1] \"2 years\"\n\n[[7]]\n[1] \"3 years\"\n\n[[8]]\n[1] \"5 years\"\n\n[[9]]\n[1] \"7 years\"\n\n[[10]]\n[1] \"10 years\"\n\n[[11]]\n[1] \"20 years\"\n\n[[12]]\n[1] \"30 years\"\n```\n:::\n:::\n\n\nObviamente tudo isso poderia ter sido feito de forma direta.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncurve_terms <- nx[-1] |>\n  str_replace(\"MO\", \"months\") |>\n  str_replace(\"YR\", \"years\") |>\n  map(as.term)\n```\n:::\n\n\nPois bem, temos uma lista com prazos em meses e prazos em anos.\nÉ necessário converter os prazos para uma mesma unidade (`units`).\nVou converter todos os prazos para dias.\nPara fazer isso vou criar um objeto `daycount(\"actual/360\")`, que é a regra\nde contagem de dias que considera dias corridos e anos com 360 dias.\nCom a regra de contagem de dias conseguimos fazer a conversão dos prazos para\nanos e utilizando a quantidade de dias no ano da regra, 360, fazemos a\nconversão para dias.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndc <- daycount(\"actual/360\")\n\nterms <- curve_terms |>\n  map_dbl(\\(x) dib(dc) * toyears(dc, x)) |>\n  term(\"days\")\n\nterms\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"30 days\"    \"60 days\"    \"90 days\"    \"180 days\"   \"360 days\"  \n [6] \"720 days\"   \"1080 days\"  \"1800 days\"  \"2520 days\"  \"3600 days\" \n[11] \"7200 days\"  \"10800 days\"\n```\n:::\n:::\n\n\nA função `fixedincome::toyears` converte os prazos para um número em anos, por\nexemplo, 6 meses retorna 0.5, e a função `dib` retorna a quantidade de dias no\nano para a regra, neste caso, 360.\nConcluímos criando os objetos de prazo com `term`.\n\nAgora que já temos os prazos da curva vamos extrair as taxas do data.frame.\nÉ uma operação simples de extração de linhas de um data.frame e converter em\num vetor.\nFazemos uma verificação de `NA` por que eventualmente há podemos ter valores\nausentes para alguns prazos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrates <- yc[1, -1] |>\n  as.list() |>\n  as.numeric()\nrates <- rates / 100\nix <- !is.na(rates)\n\nrates[ix]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 0.0005 0.0012 0.0023 0.0056 0.0089 0.0131 0.0155 0.0178 0.0190 0.0193\n[11] 0.0229 0.0223\n```\n:::\n:::\n\n\nTendo os prazos, as taxas e a data de referência, podemos construir a curva\ncom a função `fixedincome::spotratecurve`.\nPara a curva de juros americana utilizamos taxa de juros simples\n(*compounding* `simple`), regra de contagem de dias (`actual/360`) e\no calendário de dias corridos (`actual`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntr_curve <- spotratecurve(\n  rates[ix], terms[ix],\n  \"simple\", \"actual/360\", \"actual\",\n  refdate = refdate\n)\n\ntr_curve\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          SpotRateCurve\n30 days          0.0005\n60 days          0.0012\n90 days          0.0023\n180 days         0.0056\n360 days         0.0089\n720 days         0.0131\n1080 days        0.0155\n1800 days        0.0178\n2520 days        0.0190\n3600 days        0.0193\n# ... with 2 more rows\nsimple actual/360 actual \nReference date: 2022-02-04 \n```\n:::\n:::\n\n\nNote os prazos em dias.\nAgora é só visualizar a curva de forma graciosa!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(tr_curve)\n```\n\n::: {.cell-output-display}\n![](curva-de-juros-de-americana-us-treasuries-curve_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}