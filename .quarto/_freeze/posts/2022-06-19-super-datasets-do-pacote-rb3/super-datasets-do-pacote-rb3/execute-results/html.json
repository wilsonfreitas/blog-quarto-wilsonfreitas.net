{
  "hash": "516bbf1131e7dd815efafd1bb8d298c0",
  "result": {
    "markdown": "---\ntitle: \"Super Datasets do Pacote rb3\"\ndescription: |\n  O pacote {rb3} traz funções que retornam *super datasets*, conjuntos de dados mais ricos juntando\n  a informação de diferentes datasets obtidos com as funções do pacote.\nauthor:\n  - name: Wilson Freitas\n    url: {}\ndate: 2022-06-19\n---\n\n\n\n\nA versão [0.0.3](https://github.com/wilsonfreitas/rb3/blob/main/NEWS.md) do pacote {rb3} trouxe funções\nque retornam *super datasets*.\nEstes *super datasets* são *dataframes* com dados organizados para um fim específico.\nPor exemplo, a função `rb3::yc_get` retorna um dataframe com dados da curva de juros para diversos\nvértices, dentre os vértices retornados alguns são referentes aos vencimentos dos contratos\nfuturos utilizados para produzir a curva original.\nPara alguns problemas é interessante conhecer quais vértices são referentes aos futuros,\npor exemplo, na criação de fatores primitivos de risco, onde a interpolação deve ser realizada\nutilizando apenas os futuros.\nOs contratos futuros podem ser obtidos com a função `rb3::futures_get`.\nDessa maneira, a função `rb3::yc_superset` junta os dados retornados pelas funções `rb3::yc_get` e\n`rb3::futures_get` identificando os vencimentos dos contratos futuros na curva de juros.\nPor isso *super dataset*, é um *dataset* mais rico!\n\nAtualmente o pacote apresenta as seguintes funções *superset*:\n\n- `rb3::yc_superset` retorna a curva de juros de prefixados com os contratos fututos DI1 identificados.\n- `rb3::yc_usd_superset` retorna a curva de cupom cambial com os contratos fututos DOL identificados.\n- `rb3::yc_ipca_superset` retorna a curva de juros reais com os contratos fututos DAP identificados.\n- `rb3::cotahist_equity_options_superset` retorna dados de opções de ações com informações de ações e taxas de juros.\n\nVou exemplificar a utilização de um *super dataset* com a função `rb3::yc_superset`.\nVou criar uma curva de juros apenas com os contratos futuros de DI1.\nMas antes vou responder uma pergunta que talvez tenha chegado a cabeça dos leitores:\n*Por que criar uma curva de juros apenas com os contratos futuros se já tenho uma curva de juros cheia de vértices?*\nPrimeiramente, toda curva de juros nasce a partir de um conjunto de contratos, no caso da curva\nprefixada utiliza-se os contratos futuros DI1, mais a taxa DI no vértice de 1 dia útil, assim,\nestaria retornando a curva ao seu estado original.\nLogo, todos os demais vértices da curva são obtidos a partir da interpolação entre os contratos futuros.\nAdicionalmente, caso eu precise de um vértice que não está na curva será necessário interpolar e\ncomo interpolar se não conheço os vértices referentes aos futuros?\nBem, posso interpolar nos vértices presentes, mas assim estaria interpolando sobre vértices interpolados.\nNão é um grande problema fazer isso, mas isso pode trazer problemas na contrução de fatores de \nrisco para taxa de juros, por exemplo.\n\nDando sequência, primeiro utilizamos o {rb3} para obter os dados dos futuros e da curva para a data\nde referência.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rb3)\n\nrefdate <- \"2022-06-17\"\n\nfut <- futures_get(refdate)\nyc <- yc_get(refdate)\n```\n:::\n\n\nDepois passo estes dados para a função `yc_superset` que junta os dados para indentificar os\ncontratos futuros.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- yc_superset(yc, fut)\ndf |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  refdate    cur_days biz_days forward_date r_252 r_360 symbol\n  <date>        <int>    <dbl> <date>       <dbl> <dbl> <chr> \n1 2022-06-17        3        1 2022-06-20   0.132 0     <NA>  \n2 2022-06-17        7        5 2022-06-24   0.132 0.134 <NA>  \n3 2022-06-17       12        8 2022-06-29   0.132 0.125 <NA>  \n4 2022-06-17       13        9 2022-06-30   0.132 0.13  <NA>  \n5 2022-06-17       14       10 2022-07-01   0.132 0.134 DI1N22\n6 2022-06-17       21       15 2022-07-08   0.132 0.134 <NA>  \n```\n:::\n:::\n\n\nTendo o *super dataset* eu filtro as linhas referentes aos futuros e a linha referente a 1 dia útil.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\ndf_curve <- bind_rows(\n  df |> filter(biz_days == 1) |> select(biz_days, r_252),\n  df |> filter(!is.na(symbol)) |> select(biz_days, r_252)\n)\n\ndf_curve |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  biz_days r_252\n     <dbl> <dbl>\n1        1 0.132\n2       10 0.132\n3       31 0.132\n4       54 0.133\n5       75 0.134\n6       95 0.134\n```\n:::\n:::\n\n\nPronto! Tenho a curva original novamente.\n\nApenas para ilustrar, vamos utilizar o pacote {fixedincome} para construir um objeto de\ncurva de juros e visualizar os dados.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fixedincome)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'fixedincome'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:dplyr':\n\n    first, last\n```\n:::\n\n```{.r .cell-code}\ncurve <- spotratecurve(\n  df_curve$r_252, df_curve$biz_days, \"discrete\", \"business/252\", \"Brazil/ANBIMA\",\n  refdate = as.Date(refdate)\n)\n```\n:::\n\n\nVisualizando a curva.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggspotratecurveplot(curve)\n```\n\n::: {.cell-output-display}\n![](super-datasets-do-pacote-rb3_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\nVisualizando para um horizonte mais curto e adicionando as taxas a termo.\n\n\n::: {.cell preview='true'}\n\n```{.r .cell-code}\ncurve_2y <- curve |> fixedincome::first(\"2 years\")\nggspotratecurveplot(curve_2y) +\n  ggplot2::autolayer(forwardrate(curve_2y))\n```\n\n::: {.cell-output-display}\n![](super-datasets-do-pacote-rb3_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nBem, os *super datasets* estão aí para ajudar!\nEntregam dados da B3 mais mastigados para as necessidades dos *quants* do mercado brasileiro.\n",
    "supporting": [
      "super-datasets-do-pacote-rb3_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}