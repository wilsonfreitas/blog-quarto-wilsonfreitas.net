{
  "hash": "9792aa808b2c03603b3e2c5b88fad0a1",
  "result": {
    "markdown": "---\ntitle: \"Gráficos de Composição de Índices da B3\"\ndescription: |\n  Com o pacote {rb3} é possível obter a composição dos índices da B3,\n  como o IBOVESPA, por exemplo. Vamos construir alguns gráficos donuts\n  para avaliarmos a distribuição da composição dos índices.\nauthor:\n  - name: Wilson Freitas\n    url: {}\ndate: 2022-06-01\ncategories:\n  - R\n  - rb3\n  - opendata\noutput:\n  distill::distill_article:\n    toc: 2\n    self_contained: false\n---\n\n\n\n\nRecentemente, eu implementei no pacote {rb3} um conjunto de funções que baixam dados de índices do\nsite da B3.\n\nVou mostrar aqui como utilizar a função `rb3::index_weights_get`, que retorna um data.frame com\ntodas as ações que compõem um determinado índice, juntamente com os seus respectivos pesos no\níndice.\n\nVamos começar carregando os pacotes {rb3} e {tidyverse} que utilizo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rb3)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.1     ✔ purrr   1.0.1\n✔ tibble  3.1.8     ✔ dplyr   1.1.0\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.4     ✔ forcats 1.0.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nheight <- 7.5\nwidth <- 7.5\n```\n:::\n\n\nA ideia aqui é avaliar a distribuição de ativos em alguns índices, a saber: IBOV, IBXX, IBXL, SMLL\ne IFIX.\nContudo, essa avaliação será realizada da seguinte forma: os 10 ativos com a maior participação nos\níndices serão selecionados e os demais ativos serão colocado em um grupo definido como Others.\nAssim vou fazer um gráfico de donut (uma pizza com furo no meio) apresentando a participação de\ncada ativo no índice.\nDessa maneira será possível avaliar a concentração dos índices.\n\nPara fazer essa seleção dos ativos e o agrupemento dos demais eu criei a função `top_weight`.\nEsta função já prepara o data.frame para a função `ggdonut` que constroi o gráfico de donut.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_weight <- function(.data, n = 10) {\n    top_10 <- .data |>\n        arrange(desc(weight)) |>\n        slice_head(n = n) |>\n        select(symbol, weight)\n    total_weight <- sum(top_10$weight)\n    others <- tibble(\n        symbol = \"Others\",\n        weight = 1 - total_weight\n    )\n\n    bind_rows(top_10, others) |>\n        mutate(cum_weight = cumsum(weight)) |>\n        mutate(\n            ymax = cum_weight,\n            ymin = c(0, head(cum_weight, n = -1)),\n            label_pos = (ymax + ymin) / 2,\n            label = paste0(symbol, \"\\n\", scales::percent(weight)),\n            symbol = factor(symbol, ordered = TRUE)\n        )\n}\n\nggdonut <- function(.data, index_name) {\n    ggplot(.data, aes(\n        ymax = ymax, ymin = ymin,\n        xmax = 4, xmin = 3,\n        fill = symbol\n    )) +\n        geom_rect(colour = \"white\") +\n        geom_label(\n            x = 4.5, aes(y = label_pos, label = label), size = 3\n        ) +\n        annotate(\n            \"text\",\n            x = 0, y = 0, label = index_name, size = 16, colour = \"grey\",\n            fontface = 2\n        ) +\n        coord_polar(theta = \"y\") +\n        scale_fill_brewer(palette = \"Set3\") +\n        scale_color_brewer(palette = \"Set3\") +\n        xlim(c(0, 4)) +\n        theme_void() +\n        theme(legend.position = \"none\") +\n        labs(\n            caption = \"Source: B3 (data imported using \\U1F4E6 rb3) - wilsonfreitas\"\n        )\n}\n```\n:::\n\n\n## IBOVESPA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nindex_name <- \"IBOV\"\nindex_weights_get(index_name) |>\n    top_weight() |>\n    ggdonut(index_name)\n```\n\n::: {.cell-output-display}\n![](grficos-de-composio-de-ndices-da-b3_files/figure-html/unnamed-chunk-4-1.png){width=720}\n:::\n:::\n\n\n## IBX 100\n\n\n::: {.cell}\n\n```{.r .cell-code}\nindex_name <- \"IBXX\"\nindex_weights_get(index_name) |>\n    top_weight() |>\n    ggdonut(index_name)\n```\n\n::: {.cell-output-display}\n![](grficos-de-composio-de-ndices-da-b3_files/figure-html/unnamed-chunk-5-1.png){width=720}\n:::\n:::\n\n\n## IBX 50\n\n\n::: {.cell}\n\n```{.r .cell-code}\nindex_name <- \"IBXL\"\nindex_weights_get(index_name) |>\n    top_weight() |>\n    ggdonut(index_name)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Automatic coercion from double to character was deprecated in purrr 1.0.0.\nℹ Please use an explicit call to `as.character()` within `map_chr()` instead.\nℹ The deprecated feature was likely used in the rb3 package.\n  Please report the issue at <https://github.com/wilsonfreitas/rb3/issues>.\n```\n:::\n\n::: {.cell-output-display}\n![](grficos-de-composio-de-ndices-da-b3_files/figure-html/unnamed-chunk-6-1.png){width=720}\n:::\n:::\n\n\n## SMALL\n\n\n::: {.cell}\n\n```{.r .cell-code}\nindex_name <- \"SMLL\"\nindex_weights_get(index_name) |>\n    top_weight() |>\n    ggdonut(index_name)\n```\n\n::: {.cell-output-display}\n![](grficos-de-composio-de-ndices-da-b3_files/figure-html/unnamed-chunk-7-1.png){width=720}\n:::\n:::\n\n\n## IFIX\n\n\n::: {.cell}\n\n```{.r .cell-code}\nindex_name <- \"IFIX\"\nindex_weights_get(index_name) |>\n    top_weight() |>\n    ggdonut(index_name)\n```\n\n::: {.cell-output-display}\n![](grficos-de-composio-de-ndices-da-b3_files/figure-html/unnamed-chunk-8-1.png){width=720}\n:::\n:::\n",
    "supporting": [
      "grficos-de-composio-de-ndices-da-b3_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}